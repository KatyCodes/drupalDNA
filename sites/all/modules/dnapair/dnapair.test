<?php
/**
 * @file
 * Tests for dnapair Module.
 */

class DNAPairUnitTestCase extends DrupalUnitTestCase {

    public static function getInfo() {
        return array(
            'name' => 'DNAPair Form Unit Tests',
            'description' => 'Unit Tests for the DNA Module',
            'group' => 'DNAPair Module',
        );
    }

    public function setUp() {
        parent::setUp(array('dnapair'));
    }

    function testDNA() {

        // $valid_h = array('A', 'T', 'C', 'G');

        //Describe
        $description = 'Test T Returns A in `Helix`';
        //Arrange
        $input = 'T';
        //Act
        $result = make_h($input);
        //Assert
        $expected_output = 'A';
        $this->assertEqual($result, $expected_output, $description);

        //Describe
        $description = 'Test G Returns C in Helix';
        //Arrange
        $input = 'G';
        //Act
        $result = make_h($input);
        //Assert
        $expected_output = 'C';
        $this->assertEqual($result, $expected_output, $description);

        //Describe
        $description = 'Test TA Returns AT in Helix';
        //Arrange
        $input = 'TA';
        //Act
        $result = make_h($input);
        //Assert
        $expected_output = 'AT';
        $this->assertEqual($result, $expected_output, $description);

        //Describe
        $description = 'Test ATCG Returns TAGC in Helix';
        //Arrange
        $input = 'ATCG';
        //Act
        $result = make_h($input);
        //Assert
        $expected_output = 'TAGC';
        $this->assertEqual($result, $expected_output, $description);

        //Describe
        $description = 'Test TAGC Returns ATCG in Helix';
        //Arrange
        $input = 'ATCG';
        //Act
        $result = make_h($input);
        //Assert
        $expected_output = 'TAGC';
        $this->assertEqual($result, $expected_output, $description);
    }
} // End DNATestCase

class DNAPairFunctionalTestCase extends DrupalWebTestCase {

    public static function getInfo() {
        return array(
            'name' => 'DNAPair Form Functional Tests',
            'description' => 'Functional Tests for the DNAPair Module',
            'group' => 'DNAPair Module',
        );
    }

    public function setUp() {
        parent::setUp(array('dnapair'));
    }

    public function testDNAValid() {

       $this->drupalGet('dnapair');

       $this->assertText('Enter half of the helix to get the other', 'Form displayed!');

       $form = array();
       $form['half_h'] = 'T';
       $this->drupalPost('dnapair', $form, t('submit'));

       $this->assertText("Your DNA pair!", 'Output displayed!');

   }

}
